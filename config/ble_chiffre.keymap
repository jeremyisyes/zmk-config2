/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define NAV 3

/ {
	behaviors {
		rst: boot_reset 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Bootloader Tap - Reset Hold";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "balanced";
			bindings = <&reset>, <&bootloader>;
        };

        bh: layer_taps 
		{
			compatible = "zmk,behavior-hold-tap";
			label = "Layer-Tap";
			#binding-cells = <2>;
			tapping_term_ms = <200>;
            flavor = "tap-preferred";
			bindings = <&mo>, <&kp>;
	    };
   	 };
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_backspce {
			timeout-ms = <50>;
			key-positions = <8 9>;
			bindings = <&kp BSPC>;
		};
                combo_del {
			timeout-ms = <50>;
			key-positions = <7 9>;
			bindings = <&kp DEL>;
		};
		combo_esc 
		{
			timeout-ms = <30>;
			key-positions = <0 2>;
			bindings = <&kp ESC>;
		};
		combo_tab 
		{
			timeout-ms = <35>;
			key-positions = <0 1>;
			bindings = <&kp TAB>;
		};
		combo_enter 
		{
			timeout-ms = <35>;
			key-positions = <18 19>;
			bindings = <&kp ENTER>;
		};
	};
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    keymap 
	{
    compatible = "zmk,keymap";

    default_layer {
    //   |    Q    |    W    |    E    |    R    |    T    |    Y    |    U    |    I    |    O    |    P    |
    //   |    A    |    S    |    D    |    F    |    G    |    H    |    J    |    K    |    L    |    '    |
    //   | Shft/Z  |    X    |    C    |    V    |    B    |    N    |    M    |    ,    |    .    | Shft//  |
    //                                 |  Ctrl | Space+fn1 | Space+fn2 |  Alt  |   
	   bindings = <
    &kp Q 	&kp W 	&kp E 	&kp R 	&kp T 	&kp Y 	&kp U 	&kp I 	  &kp O   &kp P
    &kp A 	&kp S 	&kp D 	&kp F 	&kp G 	&kp H 	&kp J 	&kp K 	  &kp L   &kp SQT
    &mt LSHFT Z &kp X 	&kp C 	&kp V 	&kp B   &kp N 	&kp M 	&kp COMMA &kp DOT &mt RSHFT SLASH
    			    &kp LCTRL &bh 1 SPACE &bh 2 SPACE &kp RALT
            >;
        };

    num {
    //   |    1    |    2    |    3    |    4    |    5    |    6    |    7    |    8    |    9    |    0    |
    //   |  Left   |  Down   |   Up    |  Right  |  Pg_up  |    x    |    -    |    =    |    x    |    ;    |
    //   |    x    |    x    |  Home   |   End   |  Pg_dn  |    x    |    [    |    ]    |    \    |    x    |
    //                                 |   Win   |    x    |    x    |    x    |
            bindings = <
    &kp N1 	&kp N2 	  &kp N3   &kp N4      &kp N5 	  &kp N6    &kp N7 	&kp N8 	    &kp N9 	&kp N0
    &kp LEFT    &kp DOWN  &kp UP   &kp RIGHT   &kp PG_UP  &trans    &kp MINUS 	&kp EQUAL   &trans      &kp SEMI
    &trans	&trans 	  &kp HOME &kp END     &kp PG_DN  &trans    &kp LBKT 	&kp RBKT    &kp BSLH      &trans
    			           &kp LGUI    &trans     &trans    &trans
            >;
        };

    sym {
    //   |    !    |    @    |    #    |    $    |    %    |    ^    |    &    |    *    |    (    |    )    |
    //   |    x    |    x    |    x    |    x    |    x    |    x    |    _    |    +    |    x    |    :    |
    //   |    x    |    x    | Vol Dn  |  Mute   | Vol Up  |    x    |    {    |    }    |    |    |    x    |
    //                                 |    x    |    x    |    x    |   Win   |
            bindings = <
    &kp EXCL  &kp AT   &kp HASH      &kp DLLR    &kp PRCNT     &kp CARET   &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR
    &trans    &trans   &trans        &trans      &trans        &trans      &kp UNDER 	&kp PLUS   &trans     &kp COLON
    &trans    &trans   &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &trans      &kp LBRC 	&kp RBRC   &kp PIPE   &trans
    			             &trans      &trans        &trans      &kp RGUI
            >;
        };

    nav {
    //   |   F1    |   F2    |   F3   |   F4   |   F5   |   F6   |   F7   |    F8   |    F9   |     F10    |
    //   |   F11   |   F12   |   x    |   x    |   x    |   x    |   x    |    x    |    x    |      x     |
    //   |    x    |    x    |   x    |   x    |   x    |   x    |   x    |  BT Dn  |  BT Up  |  BT Clear  |
    //                                |   x    |   x    |   x    |    x   |
            bindings = <
    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8      &kp F9      &kp F10
    &kp F11   &kp F12   &trans    &trans    &trans    &trans    &trans    &trans      &trans      &trans
    &trans    &trans    &trans    &trans    &trans    &trans    &trans 	  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR
    		                  &trans    &trans    &trans    &trans
            >;
        };
    };
};
